generator client {
  provider = "prisma-client-js"
  output   = "./prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id        String   @id @default(uuid()) @db.Uuid
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  user        User?
  AuthSession AuthSession[]
}

model User {
  id        String   @id @default(uuid()) @db.Uuid
  accountId String   @unique @db.Uuid
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  account     Account       @relation(fields: [accountId], references: [id])
  roles       Role[]
  UserLibrary UserLibrary[]
}

model Paper {
  id          String          @id @default(uuid()) @db.Uuid
  name        String
  description String
  coverUrl    String
  author      String
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @default(now())
  UserLibrary UserLibrary[]
  categories  PaperCategory[]
}

model PaperCategory {
  id     String  @id @default(uuid()) @db.Uuid
  name   String  @unique
  papers Paper[]
}

model UserLibrary {
  id        String   @id @default(uuid()) @db.Uuid
  userId    String   @db.Uuid
  paperId   String   @db.Uuid
  progress  Float    @default(0.0)
  isRead    Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  user  User  @relation(fields: [userId], references: [id])
  paper Paper @relation(fields: [paperId], references: [id])
}

model AuthSession {
  id                    String   @id @default(uuid()) @db.Uuid
  accountId             String   @db.Uuid
  accessToken           String   @unique
  accessTokenExpiresAt  DateTime
  refreshToken          String   @unique
  refreshTokenExpiresAt DateTime
  createdAt             DateTime @default(now())
  updatedAt             DateTime @default(now())

  account Account @relation(fields: [accountId], references: [id])
}

model Role {
  id   String @id @default(uuid()) @db.Uuid
  name String @unique

  users User[]
}
